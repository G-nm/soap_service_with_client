{"version":3,"sources":["RegistrationForm.js","SearchResultsTable.js","SearchForm.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["RegistrationForm","register","registerStatus","setRegisterStatus","useState","name","setName","age","setAge","phonenumber","setPhonenumber","address","setAddress","entrypoints","setEntrypoints","email","setEmail","studentid","setStudentid","id","className","onSubmit","e","preventDefault","user","username","parseInt","htmlFor","type","placeholder","required","value","onChange","target","SearchResultsTable","searchResults","scope","map","index","SearchForm","search","searchInput","setSearchInput","Navbar","role","data-toggle","href","App","setSearchResults","studentnumber","a","searchxml","config","method","url","headers","data","axios","posts","console","log","parseString","parseStringPromise","jsondata","registrationxml","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b6f7d60.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst RegistrationForm = ({ register, registerStatus, setRegisterStatus }) => {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [phonenumber, setPhonenumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [entrypoints, setEntrypoints] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [studentid, setStudentid] = useState(\"\");\n\n  const clearInputs = () => {\n    setName(\"\");\n    setAddress(\"\");\n    setAge(\"\");\n    setEmail(\"\");\n    setEntrypoints(\"\");\n    setPhonenumber(\"\");\n    setStudentid(\"\");\n  };\n\n  const formhandler = (e) => {\n    e.preventDefault();\n    let user = {\n      username: name,\n      age: parseInt(age),\n      phonenumber: phonenumber,\n      address: address,\n      entrypoints: entrypoints,\n      email: email,\n      studentid: parseInt(studentid),\n    };\n\n    register(user);\n    clearInputs();\n  };\n\n  return (\n    <>\n      <div id=\"register\" className=\"tab-pane active\">\n        <br />\n        <h3 className=\"ml-3 mt-1\">Register</h3>\n        <form id=\"registerform\" onSubmit={formhandler}>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Username\"\n              required\n              className=\"form-control\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"age\">Age</label>\n            <input\n              type=\"number\"\n              id=\"age\"\n              placeholder=\"Age\"\n              required\n              className=\"form-control\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"phonenumber\">Phone Number</label>\n            <input\n              type=\"number\"\n              id=\"phonenumber\"\n              placeholder=\"phonenumber\"\n              required\n              className=\"form-control\"\n              value={phonenumber}\n              onChange={(e) => setPhonenumber(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"address\">Address</label>\n\n            <input\n              type=\"text\"\n              id=\"address\"\n              placeholder=\"Address\"\n              required\n              className=\"form-control\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"entrypoints\">Entry Points</label>\n            <input\n              type=\"text\"\n              id=\"entrypoints\"\n              placeholder=\"entrypoints\"\n              required\n              className=\"form-control\"\n              value={entrypoints}\n              onChange={(e) => setEntrypoints(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"email\"\n              required\n              className=\"form-control\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group w-25 ml-3\">\n            <label htmlFor=\"studentid\">Student Id</label>\n            <input\n              type=\"number\"\n              id=\"studentid\"\n              placeholder=\"studentid\"\n              required\n              className=\"form-control\"\n              value={studentid}\n              onChange={(e) => setStudentid(e.target.value)}\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-outline-primary ml-3 w-25\">\n            Register\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\n\nconst SearchResultsTable = ({ searchResults }) => {\n  return (\n    <>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Username</th>\n            <th scope=\"col\">Age</th>\n            <th scope=\"col\">Phonenumber</th>\n            <th scope=\"col\">address</th>\n            <th scope=\"col\">Entrypoints</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">StudentId</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.map((user, index) => {\n            return (\n              <tr key={index}>\n                <td id=\"firstitem\">{user.username}</td>\n                <td>{user.age}</td>\n                <td>{user.phonenumber}</td>\n                <td>{user.address}</td>\n                <td>{user.entrypoints}</td>\n                <td>{user.email}</td>\n                <td>{user.studentid}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default SearchResultsTable;\n","import React from \"react\";\nimport SearchResultsTable from \"./SearchResultsTable\";\nimport { useState } from \"react\";\n\nconst SearchForm = ({ search, searchResults }) => {\n  const [searchInput, setSearchInput] = useState(\"hello\");\n  const submitHandler = (e) => {\n    e.preventDefault();\n    search(searchInput);\n  };\n  return (\n    <div id=\"search\" className=\"ml-3 tab-pane fade\">\n      <br />\n      <form id=\"searchform\" onSubmit={submitHandler}>\n        <div className=\"form-group w-25 ml-3\">\n          <label htmlFor=\"studentid\">Student Id</label>\n          <input\n            type=\"number\"\n            id=\"studentid\"\n            placeholder=\"studentid\"\n            required\n            className=\"form-control\"\n            value={searchInput}\n            onChange={(e) => {\n              setSearchInput(e.target.value);\n            }}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-outline-primary ml-3 w-25\">\n          Search\n        </button>\n      </form>\n      <br />\n      <br />\n      <SearchResultsTable searchResults={searchResults} />\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport RegistrationForm from \"./RegistrationForm\";\nimport SearchForm from \"./SearchForm\";\nconst Navbar = ({\n  searchResults,\n  search,\n  register,\n  registerStatus,\n  setRegisterStatus,\n}) => {\n  return (\n    <>\n      <ul className=\"nav nav-tabs\" role=\"tablist\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#register\">\n            Register\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" data-toggle=\"tab\" href=\"#search\">\n            Search\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        <RegistrationForm\n          register={register}\n          registerStatus={registerStatus}\n          setRegisterStatus={setRegisterStatus}\n        />\n        <SearchForm search={search} searchResults={searchResults} />\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\nimport parseString from \"xml2js\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [registerStatus, setRegisterStatus] = useState(\"\");\n\n  let search = async (studentnumber) => {\n    let searchxml = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:ws=\"http://localhost:8000/studentregistration\">\n  <soap:Body>\n    <ws:search>\n      <studentid>${studentnumber}</studentid>\n    </ws:search>\n  </soap:Body>\n  </soap:Envelope>`;\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8001/studentregistration?wsdl\",\n      headers: {\n        \"Content-Type\": \"application/soap+xml\",\n      },\n      data: searchxml,\n    };\n\n    try {\n      let posts = await axios(config);\n      console.log(posts);\n      let jsondata = await parseString.parseStringPromise(posts.data);\n      let user = [\n        {\n          address:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:address\"\n            ][0],\n          age:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:age\"\n            ][0],\n          username:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:username\"\n            ][0],\n          entrypoints:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:entrypoints\"\n            ][0],\n          studentid:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:studentid\"\n            ][0],\n          email:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:email\"\n            ][0],\n          phonenumber:\n            jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:searchResponse\"][0][\n              \"ws:phonenumber\"\n            ][0],\n        },\n      ];\n      setSearchResults(user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let register = async (user) => {\n    let registrationxml = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:ws=\"http://localhost:8000/studentregistration\">\n    <soap:Body>\n      <ws:registration>\n        <username>${user.username}</username>\n        <age>${user.age}</age>\n        <phonenumber>${user.phonenumber}</phonenumber>\n        <address>${user.address}</address>\n        <entrypoints>${user.entrypoints}</entrypoints>\n        <email>${user.email}</email>\n        <studentid>${user.studentid}</studentid>\n      </ws:registration>\n    </soap:Body>\n  </soap:Envelope>`;\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8001/studentregistration?wsdl\",\n      headers: {\n        \"Content-Type\": \"application/soap+xml\",\n      },\n      data: registrationxml,\n    };\n\n    let posts = await axios(config);\n    let jsondata = await parseString.parseStringPromise(posts.data);\n\n    let status =\n      jsondata[\"soap:Envelope\"][\"soap:Body\"][0][\"ws:registrationResponse\"][0][\n        \"ws:status\"\n      ][0];\n\n    setRegisterStatus(status);\n  };\n\n  return (\n    <>\n      <Navbar\n        searchResults={searchResults}\n        search={search}\n        register={register}\n        registerStatus={registerStatus}\n        setRegisterStatus={setRegisterStatus}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}